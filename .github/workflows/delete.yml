name: Delete Migrated Repositories

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write
  actions: read

jobs:
  delete-repositories:
    name: Delete Repositories from Target Organization
    runs-on: ubuntu-latest
    
    if: |
      (contains(github.event.comment.body, '/delete-repositories') || 
       contains(github.event.comment.body, '/delete-dry-run')) &&
      (github.event.comment.author_association == 'OWNER' || 
       github.event.comment.author_association == 'MEMBER' ||
       github.event.comment.author_association == 'COLLABORATOR')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract repositories from issue
        id: parse-issue-body
        uses: stefanbuck/github-issue-parser@v3
        
      - name: Prepare deletion confirmation
        id: prepare
        uses: actions/github-script@v8
        env:
          REPOSITORIES_JSON: ${{ steps.parse-issue-body.outputs.jsonString }}
          TARGET_ORG: ${{ vars.TARGET_ORGANIZATION }}
          IS_DRY_RUN: ${{ contains(github.event.comment.body, 'dry-run') }}
        with:
          script: |
            const script = require('./.github/scripts/cleanup/prepare.js');
            return await script({github, context, core});
            
      - name: Wait for confirmation
        id: wait-confirm
        if: steps.prepare.outputs.repo_count != '0'
        uses: actions/github-script@v8
        with:
          script: |
            const script = require('./.github/scripts/cleanup/wait.js');
            return await script({github, context, core});
            
      - name: Execute repository deletion
        if: steps.wait-confirm.outputs.confirmed == 'true'
        uses: actions/github-script@v8
        env:
          TARGET_ADMIN_TOKEN: ${{ secrets.TARGET_ADMIN_TOKEN }}
          TARGET_ORG: ${{ vars.TARGET_ORGANIZATION }}
          REPO_NAMES: ${{ steps.prepare.outputs.repo_names }}
          IS_DRY_RUN: ${{ contains(github.event.comment.body, 'dry-run') }}
        with:
          script: |
            const script = require('./.github/scripts/cleanup/execute.js');
            return await script({github, context, core});